'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Utils = require('../Utils/Utils');

var _Utils2 = _interopRequireDefault(_Utils);

var _Authorisation = require('../Authorisation/Authorisation');

var _Authorisation2 = _interopRequireDefault(_Authorisation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RedirectFunctions = function () {
  function RedirectFunctions() {
    _classCallCheck(this, RedirectFunctions);
  }

  _createClass(RedirectFunctions, null, [{
    key: 'getAfterLoginUrl',
    value: function getAfterLoginUrl() {
      var returnUrl = _Utils2.default.getParameterByName('returnUrl');

      if (returnUrl) {
        return returnUrl;
      } else if (_Authorisation2.default.hasPermissionWithKey('tmc_access')) {
        return '/sdnodeedge';
      } else if (_Authorisation2.default.hasPermissionWithKey('cubepage_access')) {
        return '/org/adminlanding';
      } else {
        return '/';
      }
    }
  }, {
    key: 'getHomeUrl',
    value: function getHomeUrl() {
      if (_Authorisation2.default.hasPermissionWithKey('tmc_access')) {
        return '/sdnodeedge';
      } else {
        return '/';
      }
    }
  }]);

  return RedirectFunctions;
}();

exports.default = RedirectFunctions;