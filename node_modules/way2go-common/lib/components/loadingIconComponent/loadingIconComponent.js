'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _muiThemeable = require('material-ui/styles/muiThemeable');

var _muiThemeable2 = _interopRequireDefault(_muiThemeable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingIconComponent = function (_React$Component) {
  _inherits(LoadingIconComponent, _React$Component);

  function LoadingIconComponent(props) {
    _classCallCheck(this, LoadingIconComponent);

    var _this = _possibleConstructorReturn(this, (LoadingIconComponent.__proto__ || Object.getPrototypeOf(LoadingIconComponent)).call(this, props));

    _this.state = {
      show: _this.props.show,
      totalTimeElapsed: 0,
      interval: 10,
      t: 0,
      c: 1,
      b: 0,
      d: 4000
    };

    _this.initialize = _this.initialize.bind(_this);
    _this.frame = _this.frame.bind(_this);
    return _this;
  }

  _createClass(LoadingIconComponent, [{
    key: 'initialize',
    value: function initialize() {
      this.setState({
        totalTimeElapsed: 0,
        t: 0
      });

      clearInterval(this.loadingInterval);
      this.loadingInterval = setInterval(this.frame, this.state.interval);
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      switch (this.props.size) {
        case 'big':
          this.setState({
            center: 55,
            dimension: 110,
            image: 'LOGO-BIG.gif',
            d: 4000 });
          break;
        case 'medium':
          this.setState({
            center: 30,
            dimension: 60,
            image: 'LOGO-MEDIUM.gif',
            d: 3000 });
          break;
        case 'small':
          this.setState({
            center: 13,
            dimension: 26,
            image: 'LOGO-SMALL.gif',
            d: 3000 });
          break;
      }

      if (this.props.show == true) {
        this.initialize();
      }
    }
  }, {
    key: 'frame',
    value: function frame() {
      if (this.state.t == this.state.d) {
        this.setState({ t: 0 });

        if (this.state.totalTimeElapsed > 180000) {
          clearInterval(this.loadingInterval);
        }
      } else {
        this.setState({ totalTimeElapsed: this.state.totalTimeElapsed + this.state.interval, t: this.state.t + this.state.interval });

        // t: current time, b: begInnIng value, c: change In value, d: duration
        var t = this.state.t,
            b = this.state.b,
            c = this.state.c,
            d = this.state.d;

        this.setState({ offset: c * Math.sin(t / d * (Math.PI / 2)) + b });
      };
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.show != this.state.show) {
        this.setState({ show: nextProps.show });
        if (nextProps.show) {
          this.initialize();
        } else {
          clearInterval(this.loadingInterval);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearInterval(this.loadingInterval);
    }
  }, {
    key: 'render',
    value: function render(props) {
      if (!this.state.show) return null;

      var style = this.props.blockinput ? { margin: 'auto', width: this.state.dimension, position: 'relative', top: '50px', marginBottom: '-50px' } : { margin: 'auto' };

      return _react2.default.createElement(
        'div',
        null,
        this.props.blockinput && _react2.default.createElement('div', { style: { width: '100%', height: '100%', backgroundColor: 'black', position: 'absolute', opacity: '0.5' } }),
        _react2.default.createElement(
          'div',
          { style: style },
          _react2.default.createElement(
            'svg',
            { height: this.state.dimension, width: this.state.dimension },
            _react2.default.createElement(
              'switch',
              null,
              this.props.size == 'big' && _react2.default.createElement(
                'g',
                null,
                _react2.default.createElement(
                  'defs',
                  null,
                  _react2.default.createElement(
                    'linearGradient',
                    { id: 'grad1', x1: '0', y1: '1', x2: '0', y2: '0' },
                    _react2.default.createElement('stop', { style: { 'stopColor': this.props.muiTheme.palette.primary1Color, 'stopOpacity': 1 }, offset: this.state.offset }),
                    _react2.default.createElement('stop', { style: { 'stopColor': 'rgb(255,255,255)', 'stopOpacity': 1 } })
                  )
                ),
                _react2.default.createElement('circle', { cx: this.state.center, cy: this.state.center, r: '51', strokeWidth: '2', fill: 'url(#grad1)', stroke: this.props.muiTheme.palette.primary1Color }),
                _react2.default.createElement('circle', { cx: this.state.center, cy: this.state.center, r: '30', stroke: 'black', strokeWidth: '0', fill: '#f7f7f7' }),
                _react2.default.createElement('image', { href: require('../../assets/images/loading-images/48-x-17.png'), x: this.state.center - 24, y: this.state.center - 7, height: '17px', width: '48px' })
              ),
              this.props.size == 'medium' && _react2.default.createElement(
                'g',
                null,
                _react2.default.createElement(
                  'defs',
                  null,
                  _react2.default.createElement(
                    'linearGradient',
                    { id: 'grad1', x1: '0', y1: '1', x2: '0', y2: '0' },
                    _react2.default.createElement('stop', { style: { 'stopColor': this.props.muiTheme.palette.primary1Color, 'stopOpacity': 1 }, offset: this.state.offset }),
                    _react2.default.createElement('stop', { style: { 'stopColor': 'rgb(255,255,255)', 'stopOpacity': 1 } })
                  )
                ),
                _react2.default.createElement('circle', { cx: this.state.center, cy: this.state.center, r: '25', strokeWidth: '1', fill: 'url(#grad1)', stroke: this.props.muiTheme.palette.primary1Color }),
                _react2.default.createElement('circle', { cx: this.state.center, cy: this.state.center, r: '10', stroke: 'black', strokeWidth: '0', fill: '#f7f7f7' })
              ),
              this.props.size == 'small' && _react2.default.createElement(
                'g',
                null,
                _react2.default.createElement(
                  'defs',
                  null,
                  _react2.default.createElement(
                    'linearGradient',
                    { id: 'grad1', x1: '0', y1: '1', x2: '0', y2: '0' },
                    _react2.default.createElement('stop', { style: { 'stopColor': this.props.muiTheme.palette.primary1Color, stopOpacity: 1 }, offset: this.state.offset }),
                    _react2.default.createElement('stop', { style: { 'stopColor': 'rgb(255,255,255)', 'stopOpacity': 1 } })
                  )
                ),
                _react2.default.createElement('circle', { cx: this.state.center, cy: this.state.center, r: '10', strokeWidth: '1', fill: 'url(#grad1)', stroke: this.props.muiTheme.palette.primary1Color })
              ),
              _react2.default.createElement(
                'foreignObject',
                null,
                _react2.default.createElement('img', { src: 'public/core/assets/images/loading-images/' + this.state.image })
              )
            )
          )
        )
      );
    }
  }]);

  return LoadingIconComponent;
}(_react2.default.Component);

exports.default = (0, _muiThemeable2.default)()(LoadingIconComponent);