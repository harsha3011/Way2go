'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Popover = require('material-ui/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _muiThemeable = require('material-ui/styles/muiThemeable');

var _muiThemeable2 = _interopRequireDefault(_muiThemeable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TooltipPopover = function (_React$Component) {
  _inherits(TooltipPopover, _React$Component);

  function TooltipPopover(props) {
    _classCallCheck(this, TooltipPopover);

    var _this = _possibleConstructorReturn(this, (TooltipPopover.__proto__ || Object.getPrototypeOf(TooltipPopover)).call(this, props));

    _this.showPopover = function (e) {
      _this.setState({ anchorEl: e.target, open: true });

      clearInterval(_this.interval);
      _this.interval = setInterval(_this.handleRequestClose, 5000);
    };

    _this.interval = null;

    _this.state = { open: false };

    _this.handleRequestClose = _this.handleRequestClose.bind(_this);
    return _this;
  }

  _createClass(TooltipPopover, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {}
  }, {
    key: 'handleRequestClose',
    value: function handleRequestClose() {
      this.setState({ open: false });
      if (this.props.handleRequestClose) this.props.handleRequestClose();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var arrowUp = {
        marginLeft: 'auto',
        marginRight: 'auto',
        width: 0,
        height: 0,
        borderLeft: '5px solid transparent',
        borderRight: '5px solid transparent',
        borderBottom: '5px solid #21658a',
        borderBottomColor: this.props.muiTheme.palette.primary2Color
      };
      var popoverContainer = {
        marginBottom: '6px',
        marginRight: '2px',
        marginLeft: '2px',
        padding: '5px 10px',
        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',
        borderColor: this.props.muiTheme.palette.primary2Color,
        backgroundColor: this.props.muiTheme.palette.primary2Color,
        borderWidth: '1px',
        borderStyle: 'solid',
        borderRadius: '5px',
        color: '#FFF',
        fontSize: '12px'
      };
      return _react2.default.createElement(
        'div',
        { style: { display: 'inline' } },
        _react2.default.createElement(
          'span',
          {
            onMouseEnter: function onMouseEnter(e) {
              return _this2.showPopover(e);
            },
            onMouseOver: function onMouseOver(e) {
              return _this2.showPopover(e);
            },
            onMouseMove: function onMouseMove(e) {
              return _this2.showPopover(e);
            },
            onMouseOut: function onMouseOut(e) {
              return _this2.handleRequestClose();
            } },
          this.props.link
        ),
        this.state.open && _react2.default.createElement(
          _Popover2.default,
          { open: this.state.open, onRequestClose: this.handleRequestClose, anchorEl: this.state.anchorEl, useLayerForClickAway: false, style: { backgroundColor: 'transparent', boxShadow: 'none' }, anchorOrigin: { "horizontal": "middle", "vertical": "bottom" }, targetOrigin: { "horizontal": "middle", "vertical": "top" } },
          _react2.default.createElement('div', { 'class': 'arrow_up', style: arrowUp }),
          _react2.default.createElement(
            'div',
            { style: popoverContainer },
            this.props.children
          )
        )
      );
    }
  }]);

  return TooltipPopover;
}(_react2.default.Component);

exports.default = (0, _muiThemeable2.default)()(TooltipPopover);