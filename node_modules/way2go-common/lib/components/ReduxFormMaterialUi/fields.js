'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderSelectField = exports.renderDateTimePicker = exports.renderRadioGroup = exports.renderCheckbox = exports.renderTextField = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _materialUi = require('material-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var renderTextField = function renderTextField(_ref) {
  var input = _ref.input,
      label = _ref.label,
      _ref$meta = _ref.meta,
      touched = _ref$meta.touched,
      error = _ref$meta.error,
      custom = _objectWithoutProperties(_ref, ['input', 'label', 'meta']);

  return _react2.default.createElement(_materialUi.TextField, _extends({
    hintText: label,
    floatingLabelText: label,
    errorText: touched && error
  }, input, custom));
};

exports.renderTextField = renderTextField;
var renderCheckbox = exports.renderCheckbox = function renderCheckbox(_ref2) {
  var input = _ref2.input,
      label = _ref2.label;
  return _react2.default.createElement(_materialUi.Checkbox, {
    label: label,
    checked: input.value ? true : false,
    onCheck: input.onChange
  });
};

var renderRadioGroup = function renderRadioGroup(_ref3) {
  var input = _ref3.input,
      rest = _objectWithoutProperties(_ref3, ['input']);

  return _react2.default.createElement(_materialUi.RadioButtonGroup, _extends({}, input, rest, {
    valueSelected: input.value,
    onChange: function onChange(event, value) {
      return input.onChange(value);
    }
  }));
};

exports.renderRadioGroup = renderRadioGroup;
var renderDateTimePicker = exports.renderDateTimePicker = function renderDateTimePicker(_ref4) {
  var input = _ref4.input,
      label = _ref4.label,
      value = _ref4.value,
      showTime = _ref4.showTime;
  return _react2.default.createElement(_materialUi.DatePicker, {
    autoOk: true,
    floatingLabelText: label,
    onChange: function onChange(event, value) {
      return input.onChange(value);
    },
    format: 'YYYY MMM DD',
    time: showTime

  });
};

var renderSelectField = function renderSelectField(_ref5) {
  var input = _ref5.input,
      label = _ref5.label,
      _ref5$meta = _ref5.meta,
      touched = _ref5$meta.touched,
      error = _ref5$meta.error,
      children = _ref5.children,
      custom = _objectWithoutProperties(_ref5, ['input', 'label', 'meta', 'children']);

  return _react2.default.createElement(_materialUi.SelectField, _extends({
    floatingLabelText: label,
    errorText: touched && error
  }, input, {
    onChange: function onChange(event, index, value) {
      return input.onChange(value);
    },
    children: children
  }, custom));
};
exports.renderSelectField = renderSelectField;