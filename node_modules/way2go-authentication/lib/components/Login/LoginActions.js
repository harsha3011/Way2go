'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loginSuccess = loginSuccess;
exports.themesSuccess = themesSuccess;
exports.getAuthenticationMode = getAuthenticationMode;
exports.login = login;
exports.themesFetch = themesFetch;

var _LoginApi = require('./LoginApi');

var _LoginApi2 = _interopRequireDefault(_LoginApi);

var _ThemesFetchApi = require('./ThemesFetchApi');

var _ThemesFetchApi2 = _interopRequireDefault(_ThemesFetchApi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';

function loginSuccess(loginResponse) {
    return { type: 'LOGIN_SUCCESS', loginResponse: { loginResponse: loginResponse.data } };
}

function themesSuccess(themesResponse) {
    return { type: 'THEMES_SUCCESS', themesResponse: { themesResponse: themesResponse.data } };
}

function authenticationModeSuccess(response) {
    return {
        type: 'AUTH_MODE_SUCCESS',
        response: response
    };
}

function getAuthenticationMode(orgId) {
    return function (dispatch) {
        _LoginApi2.default.authenticateService(orgId).then(function (result) {
            if (result.data.outputCode == 200) {
                dispatch(authenticationModeSuccess(result.data.data));
            }
        });
    };
}

function login(loginObj) {
    return function (dispath) {
        return _LoginApi2.default.login(loginObj).then(function (result) {
            dispath(loginSuccess(result));
        }).catch(function (error) {
            throw error;
        });
    };
}

function themesFetch(reqObj) {
    return function (dispath) {
        return _ThemesFetchApi2.default.themesFetch(reqObj).then(function (result) {
            dispath(themesSuccess(result));
        }).catch(function (error) {
            throw error;
        });
    };
}