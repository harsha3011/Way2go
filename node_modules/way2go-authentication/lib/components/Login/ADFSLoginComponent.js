'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _constants = require('../Constants/constants');

var Constants = _interopRequireWildcard(_constants);

var _adalMin = require('./../../assets/scripts/adal.min.js');

var _adalMin2 = _interopRequireDefault(_adalMin);

var _way2goCommon = require('way2go-common');

var _storage = require('../Constants/storage');

var _storage2 = _interopRequireDefault(_storage);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ADFSLoginComponent = function (_React$Component) {
  _inherits(ADFSLoginComponent, _React$Component);

  function ADFSLoginComponent(props) {
    _classCallCheck(this, ADFSLoginComponent);

    return _possibleConstructorReturn(this, (ADFSLoginComponent.__proto__ || Object.getPrototypeOf(ADFSLoginComponent)).call(this, props));
  }

  _createClass(ADFSLoginComponent, [{
    key: 'componentWillMount',
    value: function componentWillMount() {

      (0, _way2goCommon.Storage)().setValue(_storage2.default.IS_ADFS_ENABLED, true);

      window.config = {
        subscriptionId: Constants.subscriptionId,
        clientId: Constants.clientId,
        postLogoutRedirectUri: window.location.origin,
        extraQueryParameter: 'domain_hint=' + this.props.domain + '',
        endpoints: {
          graphApiUri: this.props.graphApiUri
        }
      };

      var authContext = new _adalMin2.default(config);

      authContext.handleWindowCallback();

      var ad_user = authContext.getCachedUser();

      if (!ad_user) {
        this.setState({ message: 'Redirecting...' });
        authContext.login();
      } else {
        this.setState({ message: 'Authenticating...' });
        this.props.afterAuthentication({
          userName: ad_user.userName,
          password: "aa",
          IDToken: sessionStorage.getItem('adal.idtoken'),
          domain: Constants.corporateDomain.replace("@", "")
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { style: { textAlign: 'center' } },
        this.state.message
      );
    }
  }]);

  return ADFSLoginComponent;
}(_react2.default.Component);

exports.default = ADFSLoginComponent;