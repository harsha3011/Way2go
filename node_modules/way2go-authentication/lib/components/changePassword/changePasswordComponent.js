'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _MuiThemeProvider = require('material-ui/styles/MuiThemeProvider');

var _MuiThemeProvider2 = _interopRequireDefault(_MuiThemeProvider);

var _Paper = require('material-ui/Paper');

var _Paper2 = _interopRequireDefault(_Paper);

var _FontIcon = require('material-ui/FontIcon');

var _FontIcon2 = _interopRequireDefault(_FontIcon);

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _Card = require('material-ui/Card');

var _Divider = require('material-ui/Divider');

var _Divider2 = _interopRequireDefault(_Divider);

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _Snackbar = require('material-ui/Snackbar');

var _Snackbar2 = _interopRequireDefault(_Snackbar);

var _container = require('muicss/lib/react/container');

var _container2 = _interopRequireDefault(_container);

var _row = require('muicss/lib/react/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('muicss/lib/react/col');

var _col2 = _interopRequireDefault(_col);

var _muiThemeable = require('material-ui/styles/muiThemeable');

var _muiThemeable2 = _interopRequireDefault(_muiThemeable);

var _Redirect = require('react-router/Redirect');

var _Redirect2 = _interopRequireDefault(_Redirect);

var _way2goCommon = require('way2go-common');

var _changePasswordAction = require('./changePasswordAction');

var _changePasswordAction2 = _interopRequireDefault(_changePasswordAction);

var _reactIntl = require('react-intl');

var _Messages = require('../Messages');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var snackBarHeight = {
    height: "70%"
};

var ChangePassword = function (_React$Component) {
    _inherits(ChangePassword, _React$Component);

    function ChangePassword(props) {
        _classCallCheck(this, ChangePassword);

        var _this = _possibleConstructorReturn(this, (ChangePassword.__proto__ || Object.getPrototypeOf(ChangePassword)).call(this, props));

        _this.saveChanges = function (user) {
            _changePasswordAction2.default.changePassword(user).then(function (response) {

                if (response.data.message === "success") {
                    _this.setState({ statusMessage: response.data.data, showAlert: true });
                } else {
                    _this.setState({ statusMessage: response.data.message, showAlert: true });
                }
            });
        };

        _this.handleOldPassword = function (e) {
            _this.setState({ oldPassword: e.target.value });
            // console.log("length of event",e.target.value.length);
            if (e.target.value.length == 0) {
                console.log("length", e.target.value.length);
                _this.setState({ errorMsgOldPassword: "This field is required" });
            } else {
                _this.setState({ errorMsgOldPassword: "" });
            }
        };

        _this.handleNewPassword = function (e) {
            _this.setState({ newPassword: e.target.value });
            // console.log("length of event",e.target.value.length);
            if (e.target.value.length == 0) {
                console.log("length", e.target.value.length);
                _this.setState({ errorMsgNewPassword: "This field is required" });
            } else {
                _this.setState({ errorMsgNewPassword: "" });
            }
        };

        _this.handleConfirmPassword = function (e) {
            _this.setState({ confirmPassword: e.target.value });
            // console.log("length of event",e.target.value.length);
            if (e.target.value.length == 0) {
                console.log("length", e.target.value.length);
                _this.setState({ errorMsgConfirmPassword: "This field is required" });
            } else {
                _this.setState({ errorMsgConfirmPassword: "" });
            }
        };

        _this.handleSubmit = function () {
            if (_this.state.oldPassword == null || _this.state.oldPassword == undefined || _this.state.oldPassword.length == 0) {
                // console.log("length",this.state.oldPassword.length);
                _this.setState({ errorMsgOldPassword: "This field is required" });
            }
            if (_this.state.newPassword.length == 0) {
                _this.setState({ errorMsgNewPassword: "This field is required" });
            }
            if (_this.state.confirmPassword.length == 0) {
                _this.setState({ errorMsgConfirmPassword: "This field is required" });
            }
            if (_this.state.oldPassword.length != 0 && _this.state.newPassword.length != 0 && _this.state.confirmPassword.length != 0) {
                var user = {};

                if (_this.state.newPassword === _this.state.confirmPassword) {
                    user = Object.assign({}, { oldPassword: _this.state.oldPassword, newPassword: _this.state.newPassword });
                    // console.log("object",user);
                    _this.saveChanges(user);
                } else {
                    _this.setState({ statusMessage: "Password doesnot match" });
                    // console.log("status message passwrd doesnt match",this.state.statusMessage);
                }
            }
        };

        _this.cancel = function () {
            var path = "/";
            _this.setState({ redirect: true, path: path });
        };

        _this.state = {
            statusMessage: "",
            oldPassword: "",
            newPassword: "",
            confirmPassword: "",
            errorMsgOldPassword: "",
            errorMsgNewPassword: "",
            errorMsgConfirmPassword: "",
            showAlert: false,
            open: true
        };
        return _this;
    }
    //function to hit the api and get the response

    //this function is called when cancel button is clicked and it redirects to home 


    _createClass(ChangePassword, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    _container2.default,
                    null,
                    _react2.default.createElement(
                        _row2.default,
                        null,
                        _react2.default.createElement(
                            'div',
                            { className: 'profileHeaderDiv' },
                            _react2.default.createElement(
                                'i',
                                { className: 'material-icons lockIcon' },
                                'lock'
                            ),
                            _react2.default.createElement(
                                'span',
                                { className: 'profileHeader' },
                                _react2.default.createElement(_reactIntl.FormattedMessage, {
                                    id: 'change_password',
                                    defaultMessage: 'Change Password'
                                })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _row2.default,
                        null,
                        _react2.default.createElement(
                            _Paper2.default,
                            { style: { width: "420px", margin: "auto", height: "420px" } },
                            _react2.default.createElement(
                                'div',
                                { className: 'mui--text-center' },
                                _react2.default.createElement(_TextField2.default, {
                                    floatingLabelText: this.props.intl.formatMessage(_Messages.messages.old_password),
                                    type: 'password',
                                    className: 'mui--text-left passwordTextField',
                                    errorText: this.state.errorMsgOldPassword,
                                    name: this.state.oldPassword,
                                    onChange: this.handleOldPassword
                                }),
                                _react2.default.createElement(_TextField2.default, {
                                    floatingLabelText: this.props.intl.formatMessage(_Messages.messages.new_password),
                                    type: 'password',
                                    className: 'mui--text-left passwordTextField',
                                    errorText: this.state.errorMsgNewPassword,
                                    name: this.state.newPassword,
                                    onChange: this.handleNewPassword
                                }),
                                _react2.default.createElement(_TextField2.default, {
                                    floatingLabelText: this.props.intl.formatMessage(_Messages.messages.confirm_password),
                                    type: 'password',
                                    className: 'mui--text-left passwordTextField',
                                    errorText: this.state.errorMsgConfirmPassword,
                                    name: this.state.confirmPassword,
                                    onChange: this.handleConfirmPassword
                                })
                            ),
                            _react2.default.createElement('div', { className: 'mui--text-center' }),
                            _react2.default.createElement(
                                'div',
                                { className: 'mui--text-center', style: { "marginTop": "30px" } },
                                _react2.default.createElement(_RaisedButton2.default, { type: 'submit', className: 'saveButton', onClick: this.handleSubmit, label: 'Save', primary: true }),
                                this.state.redirect && _react2.default.createElement(_Redirect2.default, { to: { pathname: this.state.path } }),
                                _react2.default.createElement(_RaisedButton2.default, { type: 'button', label: 'Cancel', onClick: this.cancel })
                            )
                        )
                    ),
                    _react2.default.createElement(_Snackbar2.default, {
                        open: this.state.showAlert,
                        message: this.state.statusMessage,
                        autoHideDuration: 4000,
                        bodyStyle: snackBarHeight
                    })
                )
            );
        }
    }]);

    return ChangePassword;
}(_react2.default.Component);

ChangePassword.propTypes = {
    intl: _reactIntl.intlShape.isRequired
};

exports.default = (0, _reactIntl.injectIntl)((0, _muiThemeable2.default)()(ChangePassword));