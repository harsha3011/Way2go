'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _way2goCommon = require('way2go-common');

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _LoginActions = require('../Login/LoginActions');

var LoginActions = _interopRequireWildcard(_LoginActions);

var _constants = require('../Constants/constants');

var Constants = _interopRequireWildcard(_constants);

var _adalMin = require('./../../assets/scripts/adal.min.js');

var _adalMin2 = _interopRequireDefault(_adalMin);

var _storage = require('../Constants/storage');

var _storage2 = _interopRequireDefault(_storage);

var _apiUrls = require('../Constants/apiUrls');

var ApiUrls = _interopRequireWildcard(_apiUrls);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Logout = function (_React$Component) {
    _inherits(Logout, _React$Component);

    function Logout(props) {
        _classCallCheck(this, Logout);

        var _this = _possibleConstructorReturn(this, (Logout.__proto__ || Object.getPrototypeOf(Logout)).call(this, props));

        _this.logout = _this.logout.bind(_this);
        return _this;
    }

    _createClass(Logout, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.logout();
        }
    }, {
        key: 'logout',
        value: function logout() {
            var _this2 = this;

            var authModeResponse = this.props.authModeResponse;
            _axios2.default.post(ApiUrls.authservice + "/auth/logout", {
                "key": (0, _way2goCommon.Storage)().getAuthToken()
            }).then(function (response) {
                if (response.data.outputStatus == "success") {

                    var loginUrl = "/authentication/login";
                    var orgId = (0, _way2goCommon.Storage)().getValue((0, _way2goCommon.Storage)().options.ORG_ID);
                    if (orgId) loginUrl = loginUrl + "/" + orgId + "/loggedOut";

                    // Logout from ADFS
                    if ((0, _way2goCommon.Storage)().getValue(_storage2.default.IS_ADFS_ENABLED)) {
                        _this2.props.actions.getAuthenticationMode(orgId);
                    } else {

                        (0, _way2goCommon.Storage)().cleanStorage();
                        if (orgId) (0, _way2goCommon.Storage)().setValue((0, _way2goCommon.Storage)().options.ORG_ID, orgId);

                        window.location.href = loginUrl;
                    }
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                this.props.authModeResponse && this.props.authModeResponse.isADFSenabled && _react2.default.createElement(ADFSLogout, { domain: this.props.authModeResponse.domain, graphApiUri: this.props.authModeResponse.graphApiUri })
            );
        }
    }]);

    return Logout;
}(_react2.default.Component);

var ADFSLogout = function ADFSLogout(props) {

    window.config = {
        subscriptionId: Constants.subscriptionId,
        clientId: Constants.clientId,
        postLogoutRedirectUri: window.location.origin,
        extraQueryParameter: 'domain_hint=' + props.domain + '',
        endpoints: {
            graphApiUri: props.graphApiUri
        }
    };

    var authContext = new _adalMin2.default(config);

    authContext.handleWindowCallback();

    var ad_user = authContext.getCachedUser();

    var orgId = localStorage.getItem("orgId");

    localStorage.clear();

    if (orgId) localStorage.setItem("orgId", orgId);

    authContext.logOut();
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        authModeResponse: state.login.authModeResponse
    };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        actions: (0, _redux.bindActionCreators)(LoginActions, dispatch)
    };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Logout);