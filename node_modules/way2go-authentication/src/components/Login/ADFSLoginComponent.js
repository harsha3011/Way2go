import React from 'react';

import * as Constants from '../Constants/constants';

import AuthenticationContext from './../../assets/scripts/adal.min.js';
import {Storage} from 'way2go-common';
import storageOptions from '../Constants/storage';

class ADFSLoginComponent extends React.Component {
  constructor(props) {
    super(props);
  }

  componentWillMount() {

    Storage().setValue(storageOptions.IS_ADFS_ENABLED, true);

    window.config = {
      subscriptionId: Constants.subscriptionId,
      clientId: Constants.clientId,
      postLogoutRedirectUri: window.location.origin,
      extraQueryParameter: 'domain_hint=' + this.props.domain + '',
      endpoints: {
        graphApiUri: this.props.graphApiUri
      }
    };

    let authContext = new AuthenticationContext(config);

    authContext.handleWindowCallback();

    let ad_user = authContext.getCachedUser();

    if(!ad_user) {
      this.setState({message: 'Redirecting...'});
      authContext.login();
    } else {
      this.setState({message: 'Authenticating...'});
      this.props.afterAuthentication({
        userName: ad_user.userName,
        password: "aa",
        IDToken: sessionStorage.getItem('adal.idtoken'),
        domain: Constants.corporateDomain.replace("@", "")
      });
    }
  }

  render() {
    return <div style={{textAlign: 'center'}}>{this.state.message}</div>;
  }
}

export default ADFSLoginComponent;
